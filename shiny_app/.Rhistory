abc
class(z)
class(abc)
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 11] <- 4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x==10] <-4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x<10] <-4
x
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>10==4]
x[x>10]==4
x
x[x>10] <-4
x
x <- 1:4
p <- x/sum(x)
temp <- rbind(x,p)
rownames(temp) <- c("X", "Prob")
temp
x
p
temp
cube <- function(x,n){x^3}
cube(3)
cube
x <- 1:10
if(x>5){x<-0}
f <- function(x){g <- function(y) {y+z} z <- 4 x+g(x)}
f <- function(x){g <- function(y) {y+z} z <- 4 x+g(x)}
f <- function(x){g <- function(y) {
y +z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f
g
g <- function(y) {}
g <- function(y) {
y+z}
g
g(2)
g <- function(y) {
y+z}
g <- function(y) {
y+z
}
add2 <- function(x, y) {
x + y
}
add2(2,5)
above10 <- function(x){
use <- x > 10
x[use]
}
above10(0)
above10(12)
above10(4)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
z <- 100
f(3)
z <- 100
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
f <- function(x) {
z <- 4
g <- function(y) {
y + z
}
x + g(x)
}
f <- function(x) {
z <- 4
g <- function(y) {
y + z
}
x + g(x)
}
f(3)
load codetools
codetools
findGlobals
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
debug(ls)
f <- function(x) {
z <- 4
g <- function(y) {
y + z
}
x + g(x)
}
f(3)
f(7)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(2)
?lisst
?list
makeVector(x=numeric(2,3,4,5))
makeVector <- function(x) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector()
makeVector(1:15)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
example=makeVector(c(1,2,3,4))
example.get
example
example$getmean
example = makeVector(1:4)
example
example$getmean
example$getmean()
example$setmean()
example$get()
example$set()
example=makeVector(c(1,2,3,4))
example$get()
example$set()
example$getmean()
#set the value of the vector
#get the value of the vector
#set the value of the mean
#get the value of the mean
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
example=makeVector(c(1,2,3,4))
example$get()
example$getmean()
example$cachemean()
cachemean(example)
example$getmean()
?matrix
mdat <- matrix(c(1,2,4,1,4,8,4,9,9), nrow=3, ncol=3)
mdat
solve(mdat)
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getinverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
kdat <- makeCacheMatrix(mdat)
kdat$getinverse()
cacheSolve(kdat)
kdat$getinverse()
?leaflet
??leaflet
?leaflet
??leaflet
library(leaflet)
?leaflet
---
title: "simplemap_inR"
author: "Irene Chen"
date: "2/15/2018"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
---
title: "simplemap_inR"
author: "Irene Chen"
date: "2/15/2018"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r, eval=FALSE}
library(leaflet)
my_map <- leaflet() %>%
addTiles()
my_map
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
---
title: "simplemap_inR"
author: "Irene Chen"
date: "2/15/2018"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r, eval=FALSE}
library(leaflet)
my_map <- leaflet() %>%
addMarkers(lat=39.290803, lng=-76.5898801,
popup="Jeff Leek's Office")
addTiles()
my_map
```
## My First Map
You can also embed maps, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
---
title: "simplemap_inR"
author: "Irene Chen"
date: "2/15/2018"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r, eval=FALSE}
library(leaflet)
my_map <- leaflet() %>%
addMarkers(lat=39.290803, lng=-76.5898801,
popup="Jeff Leek's Office")
addTiles()
my_map
```
## My First Map
You can also embed maps, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
---
title: "simplemap_inR"
author: "Irene Chen"
date: "2/15/2018"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r, eval=FALSE}
library(leaflet)
my_map <- leaflet() %>%
addTiles()
my_map
```
```{r, eval=FALSE}
library(leaflet)
my_map <- leaflet() %>%
addMarkers(lat=39.290803, lng=-76.5898801,
popup="Jeff Leek's Office")
my_map
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
---
title: "simplemap_inR"
author: "Irene Chen"
date: "2/15/2018"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r, eval=FALSE}
library(leaflet)
my_map <- leaflet() %>%
addTiles()
my_map
```
```{r, eval=FALSE}
library(leaflet)
my_map <- leaflet() %>%
addMarkers(lat=39.290803, lng=-76.5898801,
popup="Jeff Leek's Office")
my_map
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
---
title: "simplemap_inR"
author: "Irene Chen"
date: "2/15/2018"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r, eval=FALSE}
library(leaflet)
my_map <- leaflet() %>%
addTiles()
my_map
```
```{r, echo=FALSE}
library(leaflet)
my_map <- leaflet() %>%
addMarkers(lat=39.290803, lng=-76.5898801,
popup="Jeff Leek's Office")
my_map
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
knitr::opts_chunk$set(echo = TRUE)
```{r, eval=FALSE}
library(leaflet)
my_map <- leaflet() %>%
addTiles()
my_map
```{r, eval=FALSE}
---
title: "simplemap_inR"
author: "Irene Chen"
date: "2/15/2018"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r, eval=FALSE}
library(leaflet)
my_map <- my_map %>%
addMarkers(lat=39.290803, lng=-76.5898801,
popup="Jeff Leek's Office")
my_map <- leaflet() %>%
addTiles() %>%
addMarkers(lat=39.290803, lng=-76.5898801,
popup="Jeff Leek's Office")
my_map
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
knitr::opts_chunk$set(echo = FALSE)
library(plotly)
file <- list.files(pattern="moviedf.csv", full=TRUE)
df <- read.csv(file, header=TRUE, sep=",")
head(df)
ptn = '^Pix.*?'
ndx = grep(ptn, df$Studio, perl=T)
selected_rows = df[ndx,]
rsconnect::setAccountInfo(name='irenium', token='AD1DAF7499BA1CA6D684EE1159B596F1', secret='8Wav49YbgXv5MWM+iEqSaCsLS77Z/QAEoUixLG8o')
library(rsconnect)
deployApp()
~/R
cd R
~/Documents
cd Documents
setwd Documents
setwd("~/Documents/R")
setwd("~/Documents/R/shiny_app")
library(rsconnect)
deployApp()
deployApp()
knitr::opts_chunk$set(echo = FALSE)
![''](/product_interface.jpeg)
!['welkrj'](/product_interface.jpeg)
![welkrj](/product_interface.jpeg)
![welkrj](/Users/ichen/Documents/R/shiny_app/product_interface.jpg)
!["welkrj"](/Users/ichen/Documents/R/shiny_app/product_interface.jpg)
